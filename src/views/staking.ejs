<%- include('./common/header') %>
<main>
    <section class="breadcrumb-area pt-40 pb-40 bg_img"
        data-background="/images/bg/breadcrumb-bg-1.jpeg"
        data-overlay="dark" data-opacity="5">
        <div class="container">
            <div class="row">
                <div class="col-xl-12 text-center">
                    <h2 class="page-title">TMAC STAKING POOL</h2>
                    <div class="cafena-breadcrumb breadcrumbs">
                        <ul class="list-unstyled d-flex align-items-center justify-content-center">
                            <li class="cafenabcrumb-item duxinbcrumb-begin">
                                <span class="bread_msg">STAKE TMAC TOKENS TO EARN BNB</span>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section class="about_section sec_ptb_120 pb-100">
        <div class="container">
            <div class="row align-items-center justify-content-lg-between">
                <div class="col-lg-6 col-md-6">
                    <div class="about_content">
                        <h3 class="wow fadeInUp" data-wow-delay=".2s">
                            <h2 class="big_title mt-20">Stake TMAC Tokens</h2>
                        </h3>
                    </div>
                    <p class="wow fadeInUp pt-10 pb-10 stk_m_txt" data-wow-delay=".3s">Earn BNB rewards by staking TMAC tokens. 20% of daily reward pool from breeze chain is dedicated to staking rewards.</p>
                    <div class="row justify-content-center">
                        <div class="col-md-6 col-sm-6 wow fadeInUp2" data-wow-delay=".1s">
                            <div class="features_item box_stat stk_box">
                                <div class="item_icon">
                                    <img src="/images/icons/f-icon-4.png" alt="tmac_token">
                                </div>
                                <h2 class="mb-2 pol_supply">0</h2>
                                <h3 class="item_title mb-0">Pool Supply</h3>
                            </div>
                        </div>

                        <div class="col-md-6 col-sm-6 wow fadeInUp2" data-wow-delay=".2s">
                            <div class="features_item box_stat stk_box">
                                <div class="item_icon">
                                    <img src="/images/icons/f-icon-1.png" alt="tmac_staking">
                                </div>
                                <h2 class="mb-2 myShare">0</h2>
                                <h3 class="item_title mb-0">My Share</h3>
                            </div>
                        </div>

                        <div class="col-md-12 col-sm-12 wow fadeInUp2 mt-10" data-wow-delay=".3s">
                            <div class="features_item box_stat stk_box">
                                <div class="item_icon">
                                    <img src="/images/icons/f-icon-3.png" alt="tmac_token">
                                </div>
                                <h2 class="mb-2 tot_staked">0</h2>
                                <h3 class="item_title mb-0">Total Staked</h3>
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="row twn-btns">
                                <div class="col-lg-6 mt-20">
                                    <a href="https://bscscan.com/token/0x6421282c7f14670d738f4651311c5a1286e46484" target="_blank" class="site-btn btn2">VIEW ON BSC SCAN</a>
                                </div>
                                <div class="col-lg-6 mt-20">
                                    <a href="https://pancakeswap.finance/swap?inputCurrency=0x6421282c7f14670d738f4651311c5a1286e46484&outputCurrency=0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c" target="_blank" class="site-btn btn2">TRADE ON PENCAKESWAP</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-5 col-md-6 col-sm-6">
                    <div class="col-md-12 mt-20 text-center">
                        <div class="wcu__item stk_item">
                            <div class="icon icon-rt">
                                <img src="/images/icons/wcu-1.png" alt="">
                            </div>
                            <div class="content cont-rt">
                                <h2>TMAC Staking</h2>
                                <h3 class="user_stk_staking">0</h3>
                                <h5>My Staked Tokens</h5>
                                <button class="site-btn mt-10 app_btn">Approve</button>
                                <div class="stk_sec_token mt-10" style="display: none;">
                                    <button class="site-btn stk_btn" disabled>STAKE</button>
                                    <button class="site-btn unstk_btn" disabled>UNSTAKE</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12 mt-20 text-center">
                        <div class="wcu__item stk_item">
                            <div class="icon icon-rt">
                                <img src="https://img.icons8.com/ios/70/000000/coffee-beans-.png" alt="">
                            </div>
                            <div class="content cont-rt">
                                <h2>Rewards</h2>
                                <h3 class="user_earnings">0</h3>
                                <h5>TMAC Tokens Earned</h5>
                                <a class="site-btn mt-10 wid_db_btn" id="btnWithdraw2" disabled>Withdraw</a>
                                <div class="wid_sec mt-10" style="display:flex;display: none;">
                                    <button class="site-btn wid_btn" disabled>WITHDRAW</button>
                                    <button class="site-btn ext_btn" disabled>EXIT</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</main>
<div class="modal fade" id="stake_modal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal_me_top" role="document">
        <div class="modal-content modal-custom modal_me_custom">
            <div class="modal-body thirty_pad">
                <div class="transfer-respond">
                    <h4 class="modal_me_title ab_font">STAKE TMAC Tokens</h4>
                    <label class="six_hun"><span class="user_lp_bal">0</span> Available TMAC Tokens</label>
                    <div class="row line mt-20">
                        <div class="col-md-12">
                            <div class="form-group">
                                <div class="input-group mb-3"><input type="text" class="form-control" name="stk_amt" id="stk_amt" placeholder="Enter Amount to Stake">
                                    <div class="input-group-append">
                                        <div class="input-group-text mb-deck modal_deck"> TMAC</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <center><button type="submit" class="btn btn_primary stk_mod_btn"><span class="stk_mod_txt">STAKE</span></button></center>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="unstake_modal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal_me_top" role="document">
        <div class="modal-content modal-custom modal_me_custom">
            <div class="modal-body thirty_pad">
                <div class="transfer-respond">
                    <h4 class="modal_me_title ab_font">UNSTAKE TMAC Tokens</h4>
                    <label class="six_hun"><span class="user_stk_bal">0</span> TMAC Staked</label>
                    <div class="row line mt-20">
                        <div class="col-md-12">
                            <div class="form-group">
                                <div class="input-group mb-3"><input type="text" class="form-control"
                                        name="unstk_amt" id="unstk_amt" placeholder="Enter Amount to UNStake">
                                    <div class="input-group-append">
                                        <div class="input-group-text mb-deck modal_deck"> TMAC</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <center><button type="submit" class="btn btn_primary unstk_mod_btn"><span class="unstk_mod_txt">UNSTAKE</span></button></center>
                </div>
            </div>
        </div>
    </div>
</div>
<%- include('./common/footer') %>
<script type="text/javascript">
    window.addEventListener('load', async () => {
        init();
        switchNetwork();
        if (window.ethereum) {
            web3 = new Web3(window.ethereum);
            await window.ethereum.enable();
            let selectedAccount = null;
            //selectedAccount = window.localStorage.getItem("userAddress"); 
            //console.log(selectedAccount)
            try {
                const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' })
                //const accounts = await web3.eth.getAccounts();
                if (accounts == null || accounts.length == 0) {
                console.log("NO ACCOUNT CONNECTED");
                document.querySelector("#connectedAdd").style.display = "none";
                document.querySelector("#prepare").style.display = "block";
                } else {
                    if (selectedAccount != accounts[0]) {
                        selectedAccount = accounts[0];
                    }
                    window.localStorage.setItem("userAddress", selectedAccount);
                    document.querySelector("#prepare").style.display = "none";
                    document.querySelector("#connectedAdd").style.display = "block";
                    $('#connectWallet').html(getUserAddress(selectedAccount));
                    $("#connectWallet").click(function(){ window.open("https://bscscan.com/address/" + selectedAccount, '_blank')});
                }
            } catch (error) {console.error(error);}

            try { provider = web3.currentProvider;
                if (typeof web3 !== 'undefined') {
                    web3 = new Web3(web3.currentProvider);
                } else {
                    // set the provider you want from Web3.providers
                    web3 = new Web3(new Web3.providers.HttpProvider("http://localhost:8545"));
                }
            } catch(e) { console.log("Could not get a wallet connection", e);
            return;
            }
            //console.log(selectedAccount)
            await getData()
            provider.on("accountsChanged", (accounts) => {console.log('Account changed');window.location.href = "";});
            provider.on("chainChanged", (chainId) => {console.log('Chain changed');window.location.href = "";});
            provider.on("networkChanged", (networkId) => {console.log('Network changed');window.location.href = "";});
        }
        document.querySelector("#btn-connect").addEventListener("click", onConnect);
    });

    async function onConnect() {
        try {
            provider = await web3Modal.connect();
        }     catch(e) {
            console.log("Could not get a wallet connection", e);
            return;
        }
        await getData();
    }
    async function getData() {
        const web3 = new Web3(provider);
        const accounts = await web3.eth.getAccounts();
        selectedAccount = accounts[0];
        //console.log(selectedAccount)
        if (selectedAccount == null || selectedAccount.length == 0) {
            console.log('no account')
            document.querySelector("#connectedAdd").style.display = "none";
            document.querySelector("#prepare").style.display = "block";
        }else{
            if (selectedAccount != accounts[0]) {
                selectedAccount = accounts[0];
            }
            document.querySelector("#prepare").style.display = "none";
            document.querySelector("#connectedAdd").style.display = "block";
            $('#connectWallet').html(getUserAddress(selectedAccount));
            $("#connectWallet").click(function(){ window.open("https://bscscan.com/address/" + selectedAccount, '_blank')});

            tokenContractInstance = new web3.eth.Contract(tmac_ABI, tmac_contract_address, {from: selectedAccount,
            });
            stakingContractInstance = new web3.eth.Contract(staking_ABI, staking_contract, {from: selectedAccount,
            });
            await updateData()
        }

    }

    async function updateData() {
        setInterval(async () => {
            if (selectedAccount != null){
                //check allowance
                var allowance=await tokenContractInstance.methods.allowance(selectedAccount, staking_contract).call();
                //user available balance for staking
                var user_lp_balance = await tokenContractInstance.methods.balanceOf(selectedAccount).call();
                user_lp_balance = user_lp_balance / 1e6;
                if (user_lp_balance > 0) {$('.user_lp_bal').html(user_lp_balance);}

                //user staked
                var staked = await stakingContractInstance.methods.balanceOf(selectedAccount).call();
                user_stake = parseFloat(staked / 1e6)
                $('.user_stk_staking').html(user_stake);
                $('.user_stk_bal').html(user_stake);
                //user reward
                var reward = await stakingContractInstance.methods.earned(selectedAccount).call();
                user_earn = parseFloat(reward / 1e18).toFixed(6);
                //console.log(user_earn)
                if (user_earn > 0) {
                    $('.user_earnings').html(user_earn);
                    $('#btnWithdraw2').hide();
                    $('.wid_sec').show();
                    $('.wid_btn').prop('disabled', false);
                    $('.ext_btn').prop('disabled', false);
                } else {
                    $('.user_earnings').html(user_earn);
                    $('.wid_sec').hide();
                    $('#btnWithdraw2').show();
                }

                // total staked amount
                var totalSupply = await stakingContractInstance.methods.totalSupply().call();
                totalSupply = parseFloat(totalSupply / 1e6);
                $('.tot_staked').html(totalSupply);

                //user staking share
                var myShare = (user_stake / totalSupply) * 100;
                myShare = myShare.toFixed(2)
                $('.myShare').html(myShare + '%');

                //available pool reward
                var polSupply = await stakingContractInstance.methods.polSupply().call();
                polSupply = parseFloat(polSupply / 1e18).toFixed(6);
                $('.pol_supply').html(polSupply);

                // start putting data in UI
                if (allowance > 0) {
                    
                    $(".app_btn").css("display", "none").prop('disabled', true); 
                    $(".stk_sec_token").show(); $(".stk_btn").prop('disabled', false); 
                    $(".unstk_btn").prop('disabled', false); 
                } else { 
                    $(".app_btn").show().prop('disabled', false); 
                    $(".stk_sec_token").hide(); $(".stk_btn").prop('disabled', true); 
                    $(".unstk_btn").prop('disabled', true); 
                    $("#stake_modal").modal("hide"); $("#unstake_modal").modal("hide"); 
                }

            }else{
                console.log('Please connect to MetaMask this one.')
                $(".app_btn").show().prop('disabled', false); 
                $(".stk_sec_token").hide(); $(".stk_btn").prop('disabled', true); 
                $(".unstk_btn").prop('disabled', true); 
                $("#stake_modal").modal("hide"); $("#unstake_modal").modal("hide"); 
            }
        }, 3000)
    }

    $('.app_btn').click(async function () {
        //maxApproveLimit = await tokenContractInstance.methods.totalSupply().call();
        $('.app_btn').html('Approving...');
        maxApproveLimit='99999111111';
        var result = await tokenContractInstance.methods.approve(staking_contract, maxApproveLimit).send({
            from: selectedAccount,
            to: staking_contract,
            gasPrice: 10000000000,
            gasLimit: 50000,
            //value : 0,       
        });

        if (result.status) {
            toastr.success('Transaction Initiated. Check status on <a href="' + bscscanTxURL + result.transactionHash + '" target="_blank">BscScan</a>');
            $('.app_btn').hide();
            $('.stk_sec_token').show();
        } else {
            toastr.error('Transaction Failed. Try Again.');
        }
    });

    $('.stk_btn').click(async function () { $("#stake_modal").appendTo("body").modal("show"); });
    $('.stk_mod_btn').click(async function () {
        let stk_amt = $('#stk_amt').val(); let lp_bal = $('.user_lp_bal').html(); let tok = "TRX";
        if (!$.trim(stk_amt).length) { toastr.error('Not a valid amount'); return false; }
        if (parseFloat(stk_amt) <= 0) { toastr.error('Not a valid amount'); return false; }
        if (parseFloat(stk_amt) > parseFloat(lp_bal)) { toastr.error('Not enough token balance'); return false; }
        $('.stk_mod_txt').html('Staking...'); $('.stk_mod_btn').attr("disabled", true);
        let stk_amt_val = stk_amt * 1e6;
        let referrer = await stakingContractInstance.methods.referrerInfo(selectedAccount).call();
        let stakedAmt = await stakingContractInstance.methods.balanceOf(selectedAccount).call();
        let refVal='<%-refVal%>';let dRef='0x0000000000000000000000000000000000000000';
        if(referrer && referrer != dRef){refAddress=referrer}
        else if(referrer && referrer==dRef && stakedAmt>0){refAddress=referrer}
        else if(referrer && referrer==dRef && stakedAmt<=0){if(!refVal){refAddress=dRef}else{refAddress=refVal}}else{refAddress==dRef}
        var result = await stakingContractInstance.methods.stake(refAddress, stk_amt_val).send({
            from: selectedAccount,
            to: staking_contract,
            gasPrice: 10000000000,
            gasLimit: 1000000,
            //value : 0,       
        });

        if (result.status) {
            $('.stk_mod_txt').html('Stake'); $('.stk_mod_btn').attr("disabled", false)
            $("#stake_modal").modal("hide");
            toastr.success('Transaction Initiated. Check status on <a href="' + bscscanTxURL + result.transactionHash + '" target="_blank">BscScan</a>');
            //checkStaked();
        } else {
            toastr.error('Transaction Failed. Try Again.');
        }
    });

    $('.unstk_btn').click(async function () { $("#unstake_modal").appendTo("body").modal("show"); });
    $('.unstk_mod_btn').click(async function () {
        let unstk_amt = $('#unstk_amt').val(); let user_stk_bal = $('.user_stk_bal').html(); 
        if (!$.trim(unstk_amt).length) { toastr.error('Not a valid amount'); return false; }
        if (parseFloat(unstk_amt) <= 0) { toastr.error('Not a valid amount'); return false; }
        if (parseFloat(unstk_amt) > parseFloat(user_stk_bal)) { toastr.error('Not enough tokens staked'); return false; }
        let unstk_amt_val = unstk_amt * 1e6;
        $('.unstk_mod_btn').html('UNStaking...'); $('.unstk_mod_txt').attr("disabled", true);
        var result = await stakingContractInstance.methods.withdraw(unstk_amt_val).send({
            from: selectedAccount,
            to: tmac_contract_address,
            gasPrice: 10000000000,
            gasLimit: 1000000,
            //value : 0,       
        });

        if (result.status) {
            $("#unstake_modal").modal("hide");
            toastr.success('Transaction Initiated. Check status on <a href="' + bscscanTxURL + result.transactionHash + '" target="_blank">BscScan</a>');
            $('.unstk_mod_btn').html('UNSTAKE'); $('.unstk_mod_txt').attr("disabled", false);
        } else {
            toastr.error('Transaction Failed. Try Again.');
            $('.unstk_mod_btn').html('UNSTAKE'); $('.unstk_mod_txt').attr("disabled", false);
        }
    });

    $('.wid_btn').click(async function () {
        var result = await stakingContractInstance.methods.getReward().send({
            from: selectedAccount,
            to: tmac_contract_address,
            gasPrice: 10000000000,
            gasLimit: 1000000,
            //value : 0,       
        });

        if (result.status) {
            toastr.success('Transaction Initiated. Check status on <a href="' + bscscanTxURL + result.transactionHash + '" target="_blank">BscScan</a>');
            $('#btnWithdraw2').show();$('.wid_sec').hide();
        } else {
            toastr.error('Transaction Failed. Try Again.');
        }
    });

    $('.ext_btn').click(async function () {
        var result = await stakingContractInstance.methods.exit().send({
            from: selectedAccount,
            to: staking_contract,
            gasPrice: 10000000000,
            gasLimit: 1000000,
            //value : 0,       
        });

        if (result.status) {
            toastr.success('Transaction Initiated. Check status on <a href="' + bscscanTxURL + result.transactionHash + '" target="_blank">BscScan</a>');
            $('#btnWithdraw2').show();$('.wid_sec').hide();
        } else {
            toastr.error('Transaction Failed. Try Again.');
        }
    });
</script>